{"version":3,"file":"DraggableList.js","names":["client","sanityClient","withConfig","apiVersion","getItemStyle","draggableStyle","itemIsUpdating","userSelect","transition","opacity","pointerEvents","undefined","cardTone","settings","isDuplicate","isGhosting","isDragging","isSelected","DraggableList","data","type","listIsUpdating","setListIsUpdating","toast","useToast","router","usePaneRouter","navigateIntent","useState","orderedData","setOrderedData","useEffect","draggingId","setDraggingId","selectedIds","setSelectedIds","clearSelected","handleSelect","clickedId","index","nativeEvent","includes","selectMultiple","shiftKey","isUsingWindows","navigator","appVersion","indexOf","selectAdditional","ctrlKey","metaKey","updatedIds","id","lastSelectedId","at","lastSelectedIndex","findIndex","item","_id","firstSelected","lastSelected","betweenIds","filter","itemIndex","map","transactPatches","patches","message","transaction","forEach","patchArgs","patch","commit","then","updated","push","title","results","length","status","description","catch","handleDragEnd","result","entities","source","destination","draggableId","effectedIds","reorderDocuments","newOrder","handleDragStart","start","selected","incrementIndex","shiftFrom","shiftTo","onWindowKeyDown","event","key","window","addEventListener","removeEventListener","duplicateOrders","useMemo","orderField","ORDER_FIELD_NAME","provided","snapshot","droppableProps","innerRef","innerProvided","innerSnapshot","Boolean","isUpdating","isDisabled","tone","draggableProps","dragHandleProps","style","placeholder","propTypes","PropTypes","arrayOf","shape","string","isRequired","bool","func"],"sources":["../src/DraggableList.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd'\nimport {usePaneRouter} from '@sanity/desk-tool'\nimport {Box, Card, useToast} from '@sanity/ui'\nimport sanityClient from 'part:@sanity/base/client'\n\nimport Document from './Document'\nimport {reorderDocuments} from './helpers/reorderDocuments'\nimport {ORDER_FIELD_NAME} from './helpers/constants'\n\nconst client = sanityClient.withConfig({\n  apiVersion: '2021-09-01',\n})\n\nconst getItemStyle = (draggableStyle, itemIsUpdating) => ({\n  userSelect: 'none',\n  transition: `opacity 500ms ease-in-out`,\n  opacity: itemIsUpdating ? 0.2 : 1,\n  pointerEvents: itemIsUpdating ? `none` : undefined,\n  ...draggableStyle,\n})\n\nconst cardTone = (settings) => {\n  const {isDuplicate, isGhosting, isDragging, isSelected} = settings\n\n  if (isGhosting) return `transparent`\n  if (isDragging || isSelected) return `primary`\n  if (isDuplicate) return `caution`\n\n  return undefined\n}\n\nexport default function DraggableList({data, type, listIsUpdating, setListIsUpdating}) {\n  const toast = useToast()\n  const router = usePaneRouter()\n  const {navigateIntent} = router\n\n  // Maintains local state order before transaction completes\n  const [orderedData, setOrderedData] = useState(data)\n\n  // Update local state when documents change from an outside source\n  useEffect(() => {\n    if (!listIsUpdating) setOrderedData(data)\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, [data])\n\n  const [draggingId, setDraggingId] = useState(``)\n  const [selectedIds, setSelectedIds] = useState([])\n\n  const clearSelected = () => setSelectedIds([])\n\n  const handleSelect = (clickedId, index, nativeEvent) => {\n    const isSelected = selectedIds.includes(clickedId)\n    const selectMultiple = nativeEvent.shiftKey\n    const isUsingWindows = navigator.appVersion.indexOf('Win') !== -1\n    const selectAdditional = isUsingWindows ? nativeEvent.ctrlKey : nativeEvent.metaKey\n\n    let updatedIds = []\n\n    // No modifier keys pressed during click:\n    // - update selected to just this one\n    // - open document\n    if (!selectMultiple && !selectAdditional) {\n      navigateIntent('edit', {id: clickedId, type})\n      return setSelectedIds([clickedId])\n    }\n\n    // Shift key was held, add id's between last selected and this one\n    // ...before adding this one\n    if (selectMultiple && !isSelected) {\n      const lastSelectedId = selectedIds.at(-1)\n      const lastSelectedIndex = orderedData.findIndex((item) => item._id === lastSelectedId)\n\n      const firstSelected = index < lastSelectedIndex ? index : lastSelectedIndex\n      const lastSelected = index > lastSelectedIndex ? index : lastSelectedIndex\n\n      const betweenIds = orderedData\n        .filter((item, itemIndex) => itemIndex > firstSelected && itemIndex < lastSelected)\n        .map((item) => item._id)\n\n      updatedIds = [...selectedIds, ...betweenIds, clickedId]\n    } else if (isSelected) {\n      // Toggle off a single id\n      updatedIds = selectedIds.filter((id) => id !== clickedId)\n    } else {\n      // Toggle on a single id\n      updatedIds = [...selectedIds, clickedId]\n    }\n\n    return setSelectedIds(updatedIds)\n  }\n\n  const transactPatches = async (patches, message) => {\n    const transaction = client.transaction()\n\n    patches.forEach((patchArgs) => transaction.patch(...patchArgs))\n\n    await transaction\n      .commit()\n      .then((updated) => {\n        clearSelected()\n        setDraggingId(``)\n        setListIsUpdating(false)\n        toast.push({\n          title: `${\n            updated.results.length === 1 ? `1 Document` : `${updated.results.length} Documents`\n          } Reordered`,\n          status: `success`,\n          description: message,\n        })\n      })\n      .catch(() => {\n        setDraggingId(``)\n        setListIsUpdating(false)\n        toast.push({\n          title: `Reordering failed`,\n          status: `critical`,\n        })\n      })\n  }\n\n  const handleDragEnd = (result, entities) => {\n    setDraggingId(``)\n\n    const {source, destination, draggableId} = result ?? {}\n\n    // Don't do anything if nothing changed\n    if (source.index === destination.index) return\n\n    // Don't do anything if we don't have the entitites\n    if (!entities?.length) return\n\n    // A document can be dragged without being one-of-many-selected\n    const effectedIds = selectedIds?.length ? selectedIds : [draggableId]\n\n    // Don't do anything if we don't have ids to effect\n    if (!effectedIds?.length) return\n\n    // Update state to update styles + prevent data refetching\n    setListIsUpdating(true)\n    setSelectedIds(effectedIds)\n\n    const {newOrder, patches, message} = reorderDocuments({\n      entities,\n      selectedIds: effectedIds,\n      source,\n      destination,\n    })\n\n    // Update local state\n    if (newOrder?.length) {\n      setOrderedData(newOrder)\n    }\n\n    // Transact new order patches\n    if (patches?.length) {\n      transactPatches(patches, message)\n    }\n  }\n\n  const handleDragStart = (start) => {\n    const id = start.draggableId\n    const selected = selectedIds.includes(id)\n\n    // if dragging an item that is not selected - unselect all items\n    if (!selected) clearSelected()\n\n    setDraggingId(id)\n  }\n\n  // Move one document up or down one place, by fake invoking the drag function\n  const incrementIndex = (shiftFrom, shiftTo, id, entities) => {\n    const result = {\n      draggableId: id,\n      source: {index: shiftFrom},\n      destination: {index: shiftTo},\n    }\n\n    return handleDragEnd(result, entities)\n  }\n\n  const onWindowKeyDown = (event) => {\n    if (event.key === 'Escape') {\n      clearSelected()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', onWindowKeyDown)\n\n    return () => {\n      window.removeEventListener('keydown', onWindowKeyDown)\n    }\n  }, [])\n\n  // Find all items with duplicate order field\n  const duplicateOrders = useMemo(() => {\n    if (!orderedData.length) return []\n\n    const orderField = orderedData.map((item) => item[ORDER_FIELD_NAME])\n\n    return orderField.filter((item, index) => orderField.indexOf(item) !== index)\n  }, [orderedData])\n\n  return (\n    <DragDropContext\n      onDragStart={handleDragStart}\n      onDragEnd={(result) => handleDragEnd(result, orderedData)}\n    >\n      <Droppable droppableId=\"documentSortZone\">\n        {(provided, snapshot) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {orderedData.map((item, index) => (\n              <Draggable\n                key={`${item._id}-${item[ORDER_FIELD_NAME]}`}\n                draggableId={item._id}\n                index={index}\n                // onClick={(event) => handleDraggableClick(event, provided, snapshot)}\n              >\n                {(innerProvided, innerSnapshot) => {\n                  const isSelected = selectedIds.includes(item._id)\n                  const isDragging = innerSnapshot.isDragging\n                  const isGhosting = Boolean(!isDragging && draggingId && isSelected)\n                  const isUpdating = listIsUpdating && isSelected\n                  const isDisabled = Boolean(!item[ORDER_FIELD_NAME])\n                  const isDuplicate = duplicateOrders.includes(item[ORDER_FIELD_NAME])\n                  const tone = cardTone({isDuplicate, isGhosting, isDragging, isSelected})\n\n                  return (\n                    <div\n                      ref={innerProvided.innerRef}\n                      {...innerProvided.draggableProps}\n                      {...innerProvided.dragHandleProps}\n                      style={\n                        isDisabled\n                          ? {opacity: 0.2, pointerEvents: `none`}\n                          : getItemStyle(innerProvided.draggableProps.style, isUpdating, isGhosting)\n                      }\n                    >\n                      <Box paddingBottom={1}>\n                        <Card tone={tone} shadow={isDragging ? `2` : undefined} radius={2}>\n                          <Document\n                            doc={item}\n                            entities={orderedData}\n                            handleSelect={handleSelect}\n                            increment={incrementIndex}\n                            index={index}\n                            isFirst={index === 0}\n                            isLast={index === orderedData.length - 1}\n                          />\n                        </Card>\n                      </Box>\n                    </div>\n                  )\n                }}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n\nDraggableList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  type: PropTypes.string.isRequired,\n  listIsUpdating: PropTypes.bool.isRequired,\n  setListIsUpdating: PropTypes.func.isRequired,\n}\n"],"mappings":"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"}
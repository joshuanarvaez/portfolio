"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DocumentListWrapper;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _ui = require("@sanity/ui");

var _deskTool = require("@sanity/desk-tool");

var _DocumentListQuery = _interopRequireDefault(require("./DocumentListQuery"));

var _OrderableContext = require("./OrderableContext");

var _constants = require("./helpers/constants");

var _Feedback = _interopRequireDefault(require("./Feedback"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 1. Validate first that the schema has been configured for ordering
// 2. Setup context for showIncrements
function DocumentListWrapper(_ref) {
  var type = _ref.type,
      filter = _ref.filter,
      params = _ref.params,
      showIncrements = _ref.showIncrements,
      resetOrderTransaction = _ref.resetOrderTransaction;
  var toast = (0, _ui.useToast)();
  (0, _react.useEffect)(() => {
    if (resetOrderTransaction !== null && resetOrderTransaction !== void 0 && resetOrderTransaction.title && resetOrderTransaction !== null && resetOrderTransaction !== void 0 && resetOrderTransaction.status) {
      toast.push(resetOrderTransaction);
    }
    /* eslint-disable-next-line react-hooks/exhaustive-deps */

  }, [resetOrderTransaction]);
  var schemaIsInvalid = (0, _react.useMemo)(() => {
    // Option not passed
    if (!type) {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "No ", /*#__PURE__*/_react.default.createElement("code", null, "type"), " was configured");
    }

    var typeSchema = _schema.default.get(type); // Schema not found


    if (!typeSchema) {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Schema ", /*#__PURE__*/_react.default.createElement("code", null, type), " not found");
    } // Schema lacks an order field


    if (!typeSchema.fields.some(field => (field === null || field === void 0 ? void 0 : field.name) === _constants.ORDER_FIELD_NAME)) {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Schema ", /*#__PURE__*/_react.default.createElement("code", null, type), " must have an ", /*#__PURE__*/_react.default.createElement("code", null, "order"), " field of type", ' ', /*#__PURE__*/_react.default.createElement("code", null, "string"));
    } // Schema's order field is not a string


    if (typeSchema.fields.some(field => {
      var _field$type;

      return (field === null || field === void 0 ? void 0 : field.name) === _constants.ORDER_FIELD_NAME && (field === null || field === void 0 ? void 0 : (_field$type = field.type) === null || _field$type === void 0 ? void 0 : _field$type.name) !== 'string';
    })) {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("code", null, _constants.ORDER_FIELD_NAME), " field on Schema ", /*#__PURE__*/_react.default.createElement("code", null, type), " must be", ' ', /*#__PURE__*/_react.default.createElement("code", null, "string"), " type");
    }

    return "";
  }, [type]);

  if (schemaIsInvalid) {
    return /*#__PURE__*/_react.default.createElement(_Feedback.default, null, schemaIsInvalid);
  }

  return /*#__PURE__*/_react.default.createElement(_OrderableContext.OrderableContext.Provider, {
    value: {
      showIncrements
    }
  }, /*#__PURE__*/_react.default.createElement(_DocumentListQuery.default, {
    type: type,
    filter: filter,
    params: params
  }));
}

DocumentListWrapper.propTypes = {
  showIncrements: _propTypes.default.bool.isRequired,
  type: _propTypes.default.string.isRequired,
  filter: _propTypes.default.string,
  params: _propTypes.default.object,
  resetOrderTransaction: _propTypes.default.shape({
    title: _propTypes.default.string,
    status: _propTypes.default.string
  }).isRequired
};
DocumentListWrapper.defaultProps = {
  filter: "",
  params: {}
};
//# sourceMappingURL=DocumentListWrapper.js.map
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DocumentListQuery;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

var _ui = require("@sanity/ui");

var _DraggableList = _interopRequireDefault(require("./DraggableList"));

var _constants = require("./helpers/constants");

var _Feedback = _interopRequireDefault(require("./Feedback"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var client = _client.default.withConfig({
  apiVersion: '2021-09-01'
});

function DocumentListQuery(_ref) {
  var type = _ref.type,
      filter = _ref.filter,
      params = _ref.params;

  var _useState = (0, _react.useState)(true),
      _useState2 = _slicedToArray(_useState, 2),
      isLoading = _useState2[0],
      setIsLoading = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      listIsUpdating = _useState4[0],
      setListIsUpdating = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      _useState6 = _slicedToArray(_useState5, 2),
      data = _useState6[0],
      setData = _useState6[1];

  (0, _react.useEffect)(() => {
    var query = "*[_type == $type ".concat(filter ? "&& ".concat(filter) : '', "]|order(@[$order] asc){\n      _id, _type, ").concat(_constants.ORDER_FIELD_NAME, "\n    }");
    var queryParams = Object.assign(params, {
      type,
      order: _constants.ORDER_FIELD_NAME
    });
    var subscription = null; // eslint-disable-next-line require-await

    var fetchData = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator(function* () {
        client.fetch(query, queryParams).then(documents => {
          // Remove published document from list if draft also exists
          var filteredDocuments = documents.reduce((acc, cur) => {
            if (!cur._id.startsWith("drafts.")) {
              // eslint-disable-next-line max-nested-callbacks
              var alsoHasDraft = documents.some(doc => doc._id === "drafts.".concat(cur._id));
              return alsoHasDraft ? acc : [...acc, cur];
            }

            return [...acc, cur];
          }, []);
          setData(filteredDocuments);

          if (isLoading) {
            setIsLoading(false);
          }
        });
      });

      return function fetchData() {
        return _ref2.apply(this, arguments);
      };
    }();

    var prepareData = /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator(function* () {
        setIsLoading(true);
        yield fetchData();

        if (!subscription) {
          subscription = client.listen(query, queryParams).subscribe(() => fetchData());
        }
      });

      return function prepareData() {
        return _ref3.apply(this, arguments);
      };
    }(); // Get data but only if a document isn't being patched or we don't yet have data


    if (!listIsUpdating && !data.length) {
      prepareData();
    }

    return () => {
      var _subscription;

      return (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.unsubscribe();
    };
    /* eslint-disable-next-line react-hooks/exhaustive-deps */
  }, [type]);
  var unorderedDataCount = (0, _react.useMemo)(() => data.length ? data.filter(doc => !doc[_constants.ORDER_FIELD_NAME]).length : 0, [data]);
  if (isLoading) return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    style: {
      width: "100%",
      height: "100%"
    },
    align: "center",
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Spinner, null));
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 1,
    style: {
      overflow: "scroll",
      height: "100%"
    }
  }, unorderedDataCount > 0 && /*#__PURE__*/_react.default.createElement(_Feedback.default, null, unorderedDataCount, "/", data.length, " Documents have no Order. Select", ' ', /*#__PURE__*/_react.default.createElement("strong", null, "Reset Order"), " from the Menu above to fix."), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 1
  }, /*#__PURE__*/_react.default.createElement(_DraggableList.default, {
    data: data,
    type: type,
    listIsUpdating: listIsUpdating,
    setListIsUpdating: setListIsUpdating
  })));
}

DocumentListQuery.propTypes = {
  type: _propTypes.default.string.isRequired,
  filter: _propTypes.default.string,
  params: _propTypes.default.object
};
DocumentListQuery.defaultProps = {
  filter: "",
  params: {}
};
//# sourceMappingURL=DocumentListQuery.js.map
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orderRankField = void 0;

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

var _constants = require("../helpers/constants");

var _initialRank = _interopRequireDefault(require("../helpers/initialRank"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var client = _client.default.withConfig({
  apiVersion: "2021-05-19"
});

var orderRankField = function orderRankField() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (!(config !== null && config !== void 0 && config.type)) {
    throw new Error("\n      \"type\" not defined in orderRankField parameter object. \n      Example: orderRankField({type: 'category'})\n      ");
  }

  var type = config.type;
  return _objectSpread(_objectSpread({
    title: 'Order Rank',
    readOnly: true,
    hidden: true
  }, config), {}, {
    name: _constants.ORDER_FIELD_NAME,
    type: 'string',
    initialValue: function () {
      var _initialValue = _asyncToGenerator(function* () {
        var lastDocOrderRank = yield client.fetch("*[_type == $type]|order(@[$order] desc)[0][$order]", {
          type,
          order: _constants.ORDER_FIELD_NAME
        });
        return (0, _initialRank.default)(lastDocOrderRank);
      });

      function initialValue() {
        return _initialValue.apply(this, arguments);
      }

      return initialValue;
    }()
  });
};

exports.orderRankField = orderRankField;
//# sourceMappingURL=orderRankField.js.map